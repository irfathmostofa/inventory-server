-- COMPANY Table (No Change)
CREATE TABLE COMPANY (
  id SERIAL PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  address TEXT,
  phone VARCHAR(20),
  email VARCHAR(100),
  logo TEXT,
  status VARCHAR(1) DEFAULT 'A' CHECK (status IN ('A','I')),
  CREATED_BY VARCHAR(50) DEFAULT NULL,
  CREATION_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  LAST_UPDATE VARCHAR(50) DEFAULT NULL,
  LAST_UPDATE_DATE TIMESTAMP
);

-- USERS
CREATE TABLE USERS (
  id SERIAL PRIMARY KEY,
  company_id INTEGER REFERENCES COMPANY(id) ON DELETE CASCADE,
  name VARCHAR(100) NOT NULL,
  phone VARCHAR(20) UNIQUE NOT NULL,
  email VARCHAR(100) UNIQUE NOT NULL,
  password VARCHAR(255) NOT NULL,
  role VARCHAR(50) CHECK (role IN ('ADMIN', 'MANAGER', 'STAFF')),
  status VARCHAR(1) DEFAULT 'A' CHECK (status IN ('A','I')),
  CREATED_BY VARCHAR(50) DEFAULT NULL,
  CREATION_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  LAST_UPDATE VARCHAR(50) DEFAULT NULL,
  LAST_UPDATE_DATE TIMESTAMP
);

-- PRODUCT_CATEGORIES
CREATE TABLE PRODUCT_CATEGORIES (
  id SERIAL PRIMARY KEY,
  company_id INTEGER REFERENCES COMPANY(id) ON DELETE CASCADE,
  name VARCHAR(100) NOT NULL,
  parent_id INTEGER REFERENCES PRODUCT_CATEGORIES(id) ON DELETE CASCADE,
  status VARCHAR(1) DEFAULT 'A' CHECK (status IN ('A','I')),
  CREATED_BY VARCHAR(50) DEFAULT NULL,
  CREATION_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  LAST_UPDATE VARCHAR(50) DEFAULT NULL,
  LAST_UPDATE_DATE TIMESTAMP
);

-- UOM
CREATE TABLE UOM (
  id SERIAL PRIMARY KEY,
  company_id INTEGER REFERENCES COMPANY(id) ON DELETE CASCADE,
  name VARCHAR(50) NOT NULL,
  status VARCHAR(1) DEFAULT 'A' CHECK (status IN ('A','I')),
  CREATED_BY VARCHAR(50) DEFAULT NULL,
  CREATION_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  LAST_UPDATE VARCHAR(50) DEFAULT NULL,
  LAST_UPDATE_DATE TIMESTAMP
);

-- LOCATIONS
CREATE TABLE LOCATIONS (
  id SERIAL PRIMARY KEY,
  company_id INTEGER REFERENCES COMPANY(id) ON DELETE CASCADE,
  name VARCHAR(100) NOT NULL,
  address TEXT,
  status VARCHAR(1) DEFAULT 'A' CHECK (status IN ('A','I')),
  CREATED_BY VARCHAR(50) DEFAULT NULL,
  CREATION_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  LAST_UPDATE VARCHAR(50) DEFAULT NULL,
  LAST_UPDATE_DATE TIMESTAMP
);

-- PRODUCTS
CREATE TABLE PRODUCTS (
  id SERIAL PRIMARY KEY,
  company_id INTEGER REFERENCES COMPANY(id) ON DELETE CASCADE,
  name VARCHAR(100) NOT NULL,
  category_id INTEGER REFERENCES PRODUCT_CATEGORIES(id) ON DELETE CASCADE,
  subcategory_id INTEGER REFERENCES PRODUCT_CATEGORIES(id) ON DELETE CASCADE,
  uom_id INTEGER REFERENCES UOM(id),
  location_id INTEGER REFERENCES LOCATIONS(id),
  status VARCHAR(1) DEFAULT 'A' CHECK (status IN ('A','I')),
  CREATED_BY VARCHAR(50) DEFAULT NULL,
  CREATION_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  LAST_UPDATE VARCHAR(50) DEFAULT NULL,
  LAST_UPDATE_DATE TIMESTAMP
);

-- PRODUCT_BATCHES
CREATE TABLE PRODUCT_BATCHES (
  id SERIAL PRIMARY KEY,
  company_id INTEGER REFERENCES COMPANY(id) ON DELETE CASCADE,
  product_id INTEGER REFERENCES PRODUCTS(id) ON DELETE CASCADE,
  batch_number VARCHAR(50),
  manufacture_date DATE,
  expiry_date DATE,
  status VARCHAR(1) DEFAULT 'A' CHECK (status IN ('A','I')),
  CREATED_BY VARCHAR(50) DEFAULT NULL,
  CREATION_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  LAST_UPDATE VARCHAR(50) DEFAULT NULL,
  LAST_UPDATE_DATE TIMESTAMP
);

-- SUPPLIERS
CREATE TABLE SUPPLIERS (
  id SERIAL PRIMARY KEY,
  company_id INTEGER REFERENCES COMPANY(id) ON DELETE CASCADE,
  name VARCHAR(100) NOT NULL,
  contact_person VARCHAR(100),
  phone VARCHAR(20),
  email VARCHAR(100),
  address TEXT,
  status VARCHAR(1) DEFAULT 'A' CHECK (status IN ('A','I')),
  CREATED_BY VARCHAR(50) DEFAULT NULL,
  CREATION_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  LAST_UPDATE VARCHAR(50) DEFAULT NULL,
  LAST_UPDATE_DATE TIMESTAMP
);

-- PURCHASE_ORDERS
CREATE TABLE PURCHASE_ORDERS (
  id SERIAL PRIMARY KEY,
  company_id INTEGER REFERENCES COMPANY(id) ON DELETE CASCADE,
  supplier_id INTEGER REFERENCES SUPPLIERS(id) ON DELETE CASCADE,
  order_date DATE,
  total_amount NUMERIC(12,2),
  status VARCHAR(1) DEFAULT 'A' CHECK (status IN ('A','I')),
  CREATED_BY VARCHAR(50) DEFAULT NULL,
  CREATION_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  LAST_UPDATE VARCHAR(50) DEFAULT NULL,
  LAST_UPDATE_DATE TIMESTAMP
);

CREATE TABLE PURCHASE_ORDER_ITEMS (
  id SERIAL PRIMARY KEY,
  purchase_order_id INTEGER REFERENCES PURCHASE_ORDERS(id) ON DELETE CASCADE,
  product_id INTEGER REFERENCES PRODUCTS(id),
  batch_id INTEGER REFERENCES PRODUCT_BATCHES(id),
  quantity NUMERIC(12,2),
  unit_price NUMERIC(12,2),
  total_price NUMERIC(12,2),
  CREATED_BY VARCHAR(50) DEFAULT NULL,
  CREATION_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  LAST_UPDATE VARCHAR(50) DEFAULT NULL,
  LAST_UPDATE_DATE TIMESTAMP
);

-- STOCK_TRANSACTIONS
CREATE TABLE STOCK_TRANSACTIONS (
  id SERIAL PRIMARY KEY,
  company_id INTEGER REFERENCES COMPANY(id) ON DELETE CASCADE,
  product_id INTEGER REFERENCES PRODUCTS(id),
  batch_id INTEGER REFERENCES PRODUCT_BATCHES(id),
  transaction_type VARCHAR(20) CHECK (transaction_type IN ('IN', 'OUT', 'ADJUST')),
  quantity NUMERIC(12,2),
  reference_table VARCHAR(50),
  reference_id INTEGER,
  transaction_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  CREATED_BY VARCHAR(50) DEFAULT NULL,
  CREATION_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  LAST_UPDATE VARCHAR(50) DEFAULT NULL,
  LAST_UPDATE_DATE TIMESTAMP
);

-- INVENTORY_ADJUSTMENTS
CREATE TABLE INVENTORY_ADJUSTMENTS (
  id SERIAL PRIMARY KEY,
  company_id INTEGER REFERENCES COMPANY(id) ON DELETE CASCADE,
  adjustment_date DATE,
  reason TEXT,
  status VARCHAR(1) DEFAULT 'A' CHECK (status IN ('A','I')),
  CREATED_BY VARCHAR(50) DEFAULT NULL,
  CREATION_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  LAST_UPDATE VARCHAR(50) DEFAULT NULL,
  LAST_UPDATE_DATE TIMESTAMP
);

-- CUSTOMERS
CREATE TABLE CUSTOMERS (
  id SERIAL PRIMARY KEY,
  company_id INTEGER REFERENCES COMPANY(id) ON DELETE CASCADE,
  name VARCHAR(100),
  phone VARCHAR(20),
  email VARCHAR(100),
  address TEXT,
  status VARCHAR(1) DEFAULT 'A' CHECK (status IN ('A','I')),
  CREATED_BY VARCHAR(50) DEFAULT NULL,
  CREATION_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  LAST_UPDATE VARCHAR(50) DEFAULT NULL,
  LAST_UPDATE_DATE TIMESTAMP
);

-- SALES_ORDERS
CREATE TABLE SALES_ORDERS (
  id SERIAL PRIMARY KEY,
  company_id INTEGER REFERENCES COMPANY(id) ON DELETE CASCADE,
  customer_id INTEGER REFERENCES CUSTOMERS(id),
  order_date DATE,
  total_amount NUMERIC(12,2),
  status VARCHAR(1) DEFAULT 'A' CHECK (status IN ('A','I')),
  CREATED_BY VARCHAR(50) DEFAULT NULL,
  CREATION_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  LAST_UPDATE VARCHAR(50) DEFAULT NULL,
  LAST_UPDATE_DATE TIMESTAMP
);

CREATE TABLE SALES_ORDER_ITEMS (
  id SERIAL PRIMARY KEY,
  sales_order_id INTEGER REFERENCES SALES_ORDERS(id) ON DELETE CASCADE,
  product_id INTEGER REFERENCES PRODUCTS(id),
  batch_id INTEGER REFERENCES PRODUCT_BATCHES(id),
  quantity NUMERIC(12,2),
  unit_price NUMERIC(12,2),
  total_price NUMERIC(12,2),
  CREATED_BY VARCHAR(50) DEFAULT NULL,
  CREATION_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  LAST_UPDATE VARCHAR(50) DEFAULT NULL,
  LAST_UPDATE_DATE TIMESTAMP
);

-- PAYMENTS
CREATE TABLE PAYMENTS (
  id SERIAL PRIMARY KEY,
  company_id INTEGER REFERENCES COMPANY(id) ON DELETE CASCADE,
  sales_order_id INTEGER REFERENCES SALES_ORDERS(id) ON DELETE CASCADE,
  payment_date DATE,
  amount NUMERIC(12,2),
  payment_method VARCHAR(50),
  reference_number VARCHAR(100),
  CREATED_BY VARCHAR(50) DEFAULT NULL,
  CREATION_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  LAST_UPDATE VARCHAR(50) DEFAULT NULL,
  LAST_UPDATE_DATE TIMESTAMP
);

-- CHART_OF_ACCOUNTS
CREATE TABLE CHART_OF_ACCOUNTS (
  id SERIAL PRIMARY KEY,
  company_id INTEGER REFERENCES COMPANY(id) ON DELETE CASCADE,
  account_name VARCHAR(100) NOT NULL,
  account_type VARCHAR(50) CHECK (account_type IN ('Asset','Liability','Equity','Income','Expense')),
  parent_id INTEGER REFERENCES CHART_OF_ACCOUNTS(id) ON DELETE CASCADE,
  status VARCHAR(1) DEFAULT 'A' CHECK (status IN ('A','I')),
  CREATED_BY VARCHAR(50) DEFAULT NULL,
  CREATION_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  LAST_UPDATE VARCHAR(50) DEFAULT NULL,
  LAST_UPDATE_DATE TIMESTAMP
);

-- ACCOUNT_OPENING_BALANCES
CREATE TABLE ACCOUNT_OPENING_BALANCES (
  id SERIAL PRIMARY KEY,
  company_id INTEGER REFERENCES COMPANY(id) ON DELETE CASCADE,
  account_id INTEGER REFERENCES CHART_OF_ACCOUNTS(id) ON DELETE CASCADE,
  balance_date DATE,
  opening_balance NUMERIC(12,2),
  CREATED_BY VARCHAR(50) DEFAULT NULL,
  CREATION_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  LAST_UPDATE VARCHAR(50) DEFAULT NULL,
  LAST_UPDATE_DATE TIMESTAMP
);

-- JOURNAL_ENTRIES
CREATE TABLE JOURNAL_ENTRIES (
  id SERIAL PRIMARY KEY,
  company_id INTEGER REFERENCES COMPANY(id) ON DELETE CASCADE,
  entry_date DATE,
  description TEXT,
  status VARCHAR(1) DEFAULT 'A' CHECK (status IN ('A','I')),
  CREATED_BY VARCHAR(50) DEFAULT NULL,
  CREATION_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  LAST_UPDATE VARCHAR(50) DEFAULT NULL,
  LAST_UPDATE_DATE TIMESTAMP
);

CREATE TABLE JOURNAL_ENTRY_LINES (
  id SERIAL PRIMARY KEY,
  journal_entry_id INTEGER REFERENCES JOURNAL_ENTRIES(id) ON DELETE CASCADE,
  account_id INTEGER REFERENCES CHART_OF_ACCOUNTS(id),
  debit NUMERIC(12,2) DEFAULT 0,
  credit NUMERIC(12,2) DEFAULT 0,
  CREATED_BY VARCHAR(50) DEFAULT NULL,
  CREATION_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  LAST_UPDATE VARCHAR(50) DEFAULT NULL,
  LAST_UPDATE_DATE TIMESTAMP
);
